# -*- coding: utf-8 -*-
"""
Created on Mon Apr 10 16:36:42 2017

@author: Jack
"""






#Below: plots head vs rain at various time delays
#
#PZO = scipy.io.loadmat('PZ-Out_161005_Calib20161001_1545_results.mat') #load matlab data
#DivTotHead=  PZO['DivTotHead'].reshape(PZO['DivTotHead'].size)  #make array 1 dimensional
#
#
##import PZ data  
#PZO = pd.DataFrame({'DivDateTime':PZO[ 'DivDateTime' ] , 'DivTotHead':DivTotHead})#Turn matlab data into pd dataframe
#PZO['DivTotHead'] = PZO['DivTotHead'].apply(lambda x:x/100) #convert cm to m
#
#    
#PZO['DivDateTime']= pd.to_datetime(PZO['DivDateTime'], format='%Y/%m/%d %H:%M:%S')
#PZO = PZO.set_index(['DivDateTime'])
#
#PZO = PZO.resample('1d').sum()  #bin the PZ data by day
#PZO['DivTotHead'] = PZO['DivTotHead'].apply(lambda x:x/(24*4)) #make each bin an average of the head measurment for that day 
#
#
##import rain data
#RainGauge = pd.read_csv('Weather_EmbarrassMN_151017_161005.csv', sep= ',' )
#RainGauge['Date']= pd.to_datetime(RainGauge['Date'], format='%m/%d/%Y')
#RainGauge = RainGauge.set_index(['Date'])
#
#
#
##throw out m and t dats
#RainGauge = RainGauge[RainGauge.PRCP !='M' ]
#RainGauge = RainGauge[RainGauge.PRCP !='T' ]
##turn strings into floats
#RainGauge['PRCP'] =pd.to_numeric(RainGauge['PRCP'])
#PZO['DivTotHead']= pd.to_numeric(PZO['DivTotHead'])
#
#
#
#
#
#
#
##
#for i in range(0,15):
#    
#
#    PZO.index = PZO.index +pd.DateOffset(days = 1)  #Incriment the begining date by one day
#
#    RPZ = RPZ = pd.concat([PZO, RainGauge], axis =1) #put raing gauge and PZ data together
# 
#    RPZ = RPZ[pd.notnull(RPZ['PRCP'])] #remove all Nan
#    RPZ = RPZ[pd.notnull(RPZ['DivTotHead'])] #remove all Nan
#    RPZ = RPZ.drop([RPZ.first_valid_index()]) #Remove first (incomplete) day
#    RPZ = RPZ.drop([RPZ.last_valid_index()]) #remove last (incomplete) day
#    RPZ = RPZ[RPZ.PRCP >= 0] #remove days without rainfall
#    fig = plt.figure(i)
#    graph = fig.add_subplot(1,1,1)
#    graph.plot(RPZ.PRCP, RPZ.DivTotHead, 'ro')
#  
#    plt.xlabel('Rainfall, Inches')
#    plt.ylabel('Head, m')
#    plt.title('day incriment = %d' % i)
##    plt.plot(RPZ.PRCP, RPZ.DivTotHead, 'ro')
#
#    X = RPZ['PRCP']
#
#    X = sm.add_constant(X)
#
#    fit = sm.OLS(RPZ['DivTotHead'],X).fit()
#
#    graph.plot(RPZ['PRCP'],( RPZ['PRCP']*fit.params.values[1]) + fit.params.values[0], 'k-', linewidth = 2)
# 